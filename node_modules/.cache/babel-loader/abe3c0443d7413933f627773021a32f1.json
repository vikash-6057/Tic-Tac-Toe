{"ast":null,"code":"var _jsxFileName = \"/home/vikash/Dev_js/tic-tac-toe/tic-tac-toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; // import React from 'react';\n\nimport { useState, useEffect } from 'react';\nimport Square from './components/Square';\nimport { Pattern } from \"./Pattern\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  useEffect(() => {\n    checkWinner();\n    checkTie();\n    if (player == 'X') setPlayer(\"O\");else setPlayer(\"X\");\n  }, [board]);\n  useEffect(() => {\n    if (result.state !== \"none\") {\n      alert(`Game finished ! Winner is ${result.winner}`);\n    }\n  }, [result]);\n\n  const chooseSquare = square => {\n    if (board[square] === \"\") {\n      setBoard(board.map((currentValue, index) => {\n        if (currentValue == \"\" && index == square) return player;else return currentValue;\n      }));\n    }\n  };\n\n  const checkWinner = () => {\n    Pattern.forEach(curPattern => {\n      const curPlayer = board[curPattern[0]];\n      if (curPlayer == \"\") return;\n      let isWinner = true;\n      curPattern.forEach(index => {\n        if (board[index] != curPlayer) {\n          isWinner = false;\n        }\n      });\n\n      if (isWinner) {\n        setResult({\n          winner: player,\n          state: \"Win\"\n        });\n      }\n    });\n  };\n\n  const checkTie = () => {\n    let filled = true;\n    board.forEach(curVal => {\n      if (curVal == \"\") filled = false;\n    });\n    if (filled) setResult({\n      winner: \"No one\",\n      state: \"Tie\"\n    });\n  };\n\n  const resetGame = () => {\n    setBoard;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Tic-Tac-Toe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[0],\n          chooseSquare: () => chooseSquare(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[1],\n          chooseSquare: () => chooseSquare(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[2],\n          chooseSquare: () => chooseSquare(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[3],\n          chooseSquare: () => chooseSquare(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[4],\n          chooseSquare: () => chooseSquare(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[5],\n          chooseSquare: () => chooseSquare(5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[6],\n          chooseSquare: () => chooseSquare(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[7],\n          chooseSquare: () => chooseSquare(7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[8],\n          chooseSquare: () => chooseSquare(8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-reset\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"exEpWM0woRei1+s3htcaRLSXtgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vikash/Dev_js/tic-tac-toe/tic-tac-toe/src/App.js"],"names":["useState","useEffect","Square","Pattern","App","board","setBoard","player","setPlayer","result","setResult","winner","state","checkWinner","checkTie","alert","chooseSquare","square","map","currentValue","index","forEach","curPattern","curPlayer","isWinner","filled","curVal","resetGame"],"mappings":"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","sourcesContent":["import './App.css';\n// import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Square from './components/Square';\nimport { Pattern } from \"./Pattern\";\nfunction App() {\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n  useEffect(() => {\n    checkWinner();\n    checkTie();\n    if (player == 'X')\n      setPlayer(\"O\");\n    else\n      setPlayer(\"X\");\n  }, [board]);\n  useEffect(() => {\n    if (result.state !== \"none\") {\n      alert(`Game finished ! Winner is ${result.winner}`);\n    }\n\n  }, [result]);\n  const chooseSquare = (square) => {\n    if (board[square] === \"\") {\n      setBoard(\n        board.map((currentValue, index) => {\n          if (currentValue == \"\" && index == square)\n            return player;\n          else\n            return currentValue;\n        })\n      )\n    }\n\n  };\n  const checkWinner = () => {\n    Pattern.forEach((curPattern) => {\n      const curPlayer = board[curPattern[0]];\n      if (curPlayer == \"\")\n        return;\n      let isWinner = true;\n      curPattern.forEach((index) => {\n        if (board[index] != curPlayer) {\n          isWinner = false;\n        }\n      });\n      if (isWinner) {\n        setResult({ winner: player, state: \"Win\" })\n      }\n    });\n  }\n  const checkTie = ()=>{\n    let filled = true;\n    board.forEach((curVal)=>{\n      if(curVal == \"\")\n      filled = false\n    })\n    if(filled)\n    setResult({winner:\"No one\",state:\"Tie\"})\n  }\n  const resetGame = ()=>{\n    setBoard\n  }\n  return (\n    <div className=\"App\">\n\n      <h1>Welcome to Tic-Tac-Toe!</h1>\n      {/* make board for the game */}\n      <div className='board'>\n        <div className='row'>\n          <Square val={board[0]} chooseSquare={() => chooseSquare(0)} />\n          <Square val={board[1]} chooseSquare={() => chooseSquare(1)} />\n          <Square val={board[2]} chooseSquare={() => chooseSquare(2)} />\n        </div>\n        <div className='row'>\n          <Square val={board[3]} chooseSquare={() => chooseSquare(3)} />\n          <Square val={board[4]} chooseSquare={() => chooseSquare(4)} />\n          <Square val={board[5]} chooseSquare={() => chooseSquare(5)} />\n        </div>\n        <div className='row'>\n          <Square val={board[6]} chooseSquare={() => chooseSquare(6)} />\n          <Square val={board[7]} chooseSquare={() => chooseSquare(7)} />\n          <Square val={board[8]} chooseSquare={() => chooseSquare(8)} />\n        </div>\n      </div>\n      <div className='btn-reset'>\n         <button onClick={resetGame}>Reset</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}